// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Hub = (function() {
    Hub.prototype.dialogs = {};

    Hub.prototype.currentAppName = 'none';

    function Hub($screens, $desk) {
      var $dialog, deskImage, dialogAppName, dialogFx, dlgtrigger, element, i, j, len, ref, screensImage, self;
      this.$screens = $screens;
      this.$desk = $desk;
      this._onClose = bind(this._onClose, this);
      this._onOpen = bind(this._onOpen, this);
      self = this;
      screensImage = new Image;
      screensImage.src = game.imagePath + 'screens.png';
      this.$screens.prepend(screensImage);
      deskImage = new Image;
      deskImage.src = game.imagePath + 'desk.png';
      this.$desk.prepend(deskImage);
      dlgtrigger = $('[data-dialog]');
      ref = dlgtrigger.toArray();
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        element = ref[i];
        dialogAppName = element.getAttribute('data-dialog');
        $dialog = $('#' + dialogAppName + 'Dialog')[0];
        dialogFx = self.dialogs[dialogAppName] = new DialogFx($dialog, {
          onOpenDialog: (function(dialogAppName) {
            return function(dialog) {
              return self._onOpen(dialogAppName);
            };
          })(dialogAppName),
          onCloseDialog: function(dialog) {
            return self._onClose();
          }
        });
        $(element).click((function(dialogFx) {
          return function() {
            return dialogFx.open();
          };
        })(dialogFx));
      }
      $('#parallax .parallax-layer').parallax({
        mouseport: $('#parallax')
      });
    }

    Hub.prototype._onOpen = function(appName) {
      if (this.currentAppName === 'none') {
        this.currentAppName = appName;
        return game.apps[appName].onOpen();
      } else {
        return console.warn("[WARNING] Opening app " + appName + " but app " + this.currentAppName + " is already open");
      }
    };

    Hub.prototype._onClose = function() {
      if (this.currentAppName !== 'none') {
        game.apps[this.currentAppName].onClose();
        return this.currentAppName = 'none';
      } else {
        return console.warn("[WARNING] Closing current app but no app is currently open");
      }
    };

    return Hub;

  })();

}).call(this);

//# sourceMappingURL=hub.js.map
